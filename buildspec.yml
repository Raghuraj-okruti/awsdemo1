version: 0.2
phases:
  install:
      runtime-versions:
          docker: 20
      commands:
        - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
        - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - mvn clean install
      - echo Logging into Amazon ECR....
      - aws --version
      - $(aws ecr get-login --region ap-south-1 --no-include-email)
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 602143770054.dkr.ecr.ap-south-1.amazonaws.com/awsdemo1-ecr-repo
      - REPOSITORY_URI=602143770054.dkr.ecr.ap-south-1.amazonaws.com/awsdemo1-ecr-repo
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
#      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F :'{print $2}')
  build:
    commands:
      - echo Entered the build phase....
      - echo Build Started on 'date'
      - echo Buildeing Docker Image......
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build Completed on 'date'
      - echo Pushing the docker image....
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:IMAGE_TAG
      - echo Writing image definition file .....
      - printf '[{"name":"awsdemo1","imageUri","%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
    - target/awsdemo1.jar
